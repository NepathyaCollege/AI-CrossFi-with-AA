# Serverless service configuration
service: superhackbackend

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs20.x

  environment:
    ACCESS_TOKEN_SECRET: "NEPATHYA_SUPERHACK2024_ACCESSTOKEN"
    REFRESH_TOKEN_SECRET: "NEPATHYA_SUPERHACK2024_REFRESHTOKEN"

  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-idp:*
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
        - dynamodb:BatchGetItem
      Resource:
        - "*"

plugins:
  - serverless-bundle
  - serverless-domain-manager

custom:
  customDomain:
    domainName: api.nepathyacollege.com
    basePath: 'ai'
  bundle:
    packager: 'npm'
    packagerOptions:
      scripts:
        prepack: 'rm -rf .webpack'  

functions:
  defiAuthorizer:
    handler: src/functions/authentication/defiAuthorizer.handler
  signUp:
    handler: src/functions/authentication/signup.signUp
    events:
      - http:
          path: /signup
          method: post
          cors: true
  checkEmail:
    handler: src/functions/authentication/login.checkEmail
    events:
      - http:
          path: /checkEmail
          method: post
          cors: true
  checkPassword:
    handler: src/functions/authentication/login.checkPassword
    events:
      - http:
          path: /checkPassword
          method: post
          cors: true
  verifyOTP:
    handler: src/functions/authentication/signup.verifyOTP
    events:
      - http:
          path: /verifyOTP
          method: post
          cors: true
  thirdWebVerification:
    handler: src/functions/authentication/thirdWebVerification.handler
    events:
      - http:
          path: /thirdWebVerification
          method: post
          cors: true
  storeTransaction:
    handler: src/functions/authentication/transaction.storeTransaction
    events:
      - http:
          path: transaction/{transactionHash}
          method: post
          cors: true
          authorizer:
            name: defiAuthorizer
  getTransaction:
    handler: src/functions/authentication/transaction.getTransactions
    events:
      - http:
          path: /transaction
          method: get
          cors: true
          authorizer:
            name: defiAuthorizer
  recreateVerificationToken:
    handler: src/functions/authentication/recreateVerificationHandler.handler
    events:
      - http:
          path: /getThirdWebKey
          method: get
          cors: true
          authorizer:
            name: defiAuthorizer 
